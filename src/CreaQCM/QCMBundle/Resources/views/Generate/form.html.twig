{% extends 'CreaQCMQCMBundle::layout.html.twig' %}

{% block title %}
    Génération d'un QCM - {{ parent() }}
{% endblock %}

{% block content %}

    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">Génération d'un QCM:</div>
        </div>
        <div class="panel-body">
            <h3 id="warningGenerateQCM">N'oubliez pas de cocher au moins une checkbox par question sinon votre résultat sera fossé quand vous répondrez au QCM !</h3>
            <span>La vérification des checkbox comporte encore des problèmes :( .</span><br><br><br>

            {% for flashMessage in app.session.flashbag.get('info') %}
                <div class="flash-notice alert alert-info">
                    {{ flashMessage }}
                </div>
            {% endfor %}

            {{ form_start(form, {attr: {'class': ''}} ) }}
            {{ form_row(form.name) }}

            <h4>Questions</h4>
            <ul class="questions" data-prototype="{{ form_widget(form.questions.vars.prototype)|e('html_attr') }}">
                {% for question in form.questions %}
                    <li class="question">
                        {{ form_row(question.ask) }} <br>

                        <ul class="choices" data-prototype="{{ form_widget(question.choices.vars.prototype)|e('html_attr') }}">
                            {% for choice in question.choices %}
                                <br>
                                <li>{{ form_row(choice.value) }}</li>
                                <input type="checkbox" class="checkboxSelectResult" name="myCheckbox[0]" value="0"/> Bonne réponse
                                <br><br>
                            {% endfor %}
                        </ul>

                        {{ form_row(question.response) }}
                        <br><br><br>
                    </li>
                {% endfor %}
            </ul>

            <input type="text" id="checkInputValid" name="checkValid" value="1" hidden/>

            {{ form_rest(form) }}
            {{ form_widget(form.Enregistrer) }}

            {{ form_end(form) }}

        </div>
    </div>

    <script>
        var selectResults = new Array();
        //selectResults[0] = [];

        $('.checkboxSelectResult').change(function() {
            console.log(this.value);
            var values = $("input[name='myCheckbox["+this.value+"]']:checkbox").map(function (key, value) {
                //return this.value;
                if ($(this).is(':checked')){
                    console.log("OK");
                    return key;
                }
            }).get();

            selectResults[this.value] = values;
            console.log(selectResults);

            $('#crea_qcmqcmbundle_qcm_type_questions_'+this.value+'_response').val(selectResults[this.value].toString());
        });

        /*
            Essai de vérification s'il y a au moins une checkbox de cochée pour chaque question en vain.
            Fonctionne bien la première fois mais après ma redirection impossible
        */
        /*$('form[name=crea_qcmqcmbundle_qcm_type]').submit(function(e){
            //e.preventDefault();

            var nbQuestion = $('.question').length;

            if (selectResults.length == 0 || selectResults.length < nbQuestion){
                console.log("NULL SELECT");
                $('#checkInputValid').val(0).toString();
            }
            else{
                $('#checkInputValid').val(1).toString();
                selectResults.forEach(function(selectResult, key) {
                    console.log(selectResult);
                    if (selectResult.length == 0){
                        console.log("NULL SELECT 2_ "+key);
                        console.log($('.question').length);
                        $('#checkInputValid').val(0).toString();
                    }
                    //else{
                        //console.log("NOT NULL SELECT 2_ "+key);
                        //console.log($('ul.questions li').length);
                        //$('#checkInputValid').val(1).toString();
                    //}
                });
            }
        });*/


        $(document).ready(function() {

            // Ajout d'une question au QCM
            var collectionHolderQuestion;
            var addQuestionLink = $('<a href="#" class="add_question_link btn btn-default">Ajouter une question</a><br><br><br>');
            var newLinkLiQuestion = $('<li></li>').append(addQuestionLink);

            collectionHolderQuestion = $('ul.questions');
            collectionHolderQuestion.append(newLinkLiQuestion);
            collectionHolderQuestion.data('index', collectionHolderQuestion.find(':input').length);

            console.log(collectionHolderQuestion.find(':input').length);

            //addQuestionForm(collectionHolderQuestion, newLinkLiQuestion);

            addQuestionLink.on('click', function(e) {
                e.preventDefault();
                addQuestionForm(collectionHolderQuestion, newLinkLiQuestion);
                console.log($(this).parent().parent().find('li.question:last').find('div.form-group').eq(1));
                //$('<br>').insertAfter($(this).parent().parent().find('li.question:last').find('div.form-group').eq(1));
                $(this).parent().parent().find('li.question:last').append('<br><br><br>');
            });

            // Ajout d'une possibilité de réponse pour une question
            var collectionHolderChoice;
            var addChoiceLink = $('<a href="#" class="add_question_link btn btn-default">Ajouter un choix</a>');
            var newLinkLiChoice = $('<li></li>').append(addChoiceLink);

            collectionHolderChoice = $('ul.choices');
            collectionHolderChoice.append(newLinkLiChoice);
            collectionHolderChoice.data('index', collectionHolderChoice.find(':input').length);

            console.log(collectionHolderChoice.find(':input').length);

            addChoiceLink.on('click', function(e) {
                e.preventDefault();
                //addChoiceForm(collectionHolderChoice, newLinkLiChoice);
                addChoiceForm(collectionHolderChoice, newLinkLiChoice, 0, true);
            });
        });

        function addQuestionForm(collectionHolder, newLinkLi) {
            var prototype = collectionHolder.data('prototype');
            console.log(prototype);

            var index = collectionHolder.data('index');
            console.log(index);

            var newForm = prototype.replace(/__name__/g, index);
            console.log(prototype.replace(/__name__/g, index));

            collectionHolder.data('index', index + 1);

            var newFormLiDiv = $('<div class="form-group"></div>').append(newForm);
            var newFormLi = $('<li class="question"></li>').append(newFormLiDiv);

            newFormLi.append('<a href="#" class="remove-question btn btn-danger">Supprimer la question</a>');
            newFormLi.append('<div class="indexQuestion" hidden>'+index+'</div>');
            newFormLi.append('<br><br>');
            newLinkLi.before(newFormLi);

            $('.remove-question').click(function(e) {
                e.preventDefault();
                $(this).parent().remove();
                return false;
            });


            // Ajout d'une possibilité de réponse pour une question
            var sizeListQuestions = $('ul.questions li').length;
            var indexQuestion = $('ul.questions li').eq(sizeListQuestions-2).find('div.indexQuestion').text();
            console.log(indexQuestion);

            var addChoiceLink = $('<a href="#" class="add_choice_link btn btn-default">Ajouter un choix</a>');
            var addChoiceLinkLi = $('<li></li>').append(addChoiceLink);
            var $newFormUl = $('<ul class="choices"></ul>').append(addChoiceLinkLi);
            var newLinkLiChoice = $('<li id="question'+indexQuestion+'"></li>').append($newFormUl);

            var sizeListChoices = $('ul.questions ul.choices').length;
            var collectionHolderChoice = $('ul.questions ul.choices');

            var collectionHolderChoiceAdd = $('ul.questions li').eq(sizeListQuestions-2);
            collectionHolderChoiceAdd.append(newLinkLiChoice);
            collectionHolderChoice.data('index', sizeListChoices);

            addChoiceForm(collectionHolderChoice, addChoiceLinkLi, indexQuestion, false);

            addChoiceLink.on('click', function(e) {
                e.preventDefault();
                addChoiceForm(collectionHolderChoice, addChoiceLinkLi, indexQuestion, true);
            });
        }

        function addChoiceForm(collectionHolder, newLinkLi, indexQuestion, deleteChoice) {
            var prototype = collectionHolder.data('prototype');
            console.log(prototype);

            var index = collectionHolder.data('index');
            console.log(index);

            var newForm = prototype.replace(/__name__/g, index);
            newForm = newForm.replace(/questions_0/g, "question_"+indexQuestion);
            newForm = newForm.replace(/\[questions\]\[0\]/g, "[questions]["+indexQuestion+"]");
            console.log(newForm);

            collectionHolder.data('index', index + 1);



            var newFormLi = $('<li></li>').append(newForm);
            newFormLi.append('<input type="checkbox" class="checkboxSelectResult" name="myCheckbox['+indexQuestion+']" value="'+indexQuestion+'"/> Bonne réponse');
            if (deleteChoice === true){
                newFormLi.append('<a href="#" class="remove-choice btn btn-danger" style="float: right;">Supprimer le choix</a><br><br>');
            }
            else{
                newFormLi.append('<br><br>');
            }
            newLinkLi.before(newFormLi);


            $('.remove-choice').click(function(e) {
                e.preventDefault();
                $(this).parent().remove();
                return false;
            });


            $('.checkboxSelectResult').change(function() {
                console.log(this.value);
                var values = $("input[name='myCheckbox["+this.value+"]']:checkbox").map(function (key, value) {
                    //return this.value;
                    if ($(this).is(':checked')){
                        console.log("OK");
                        return key;
                    }
                }).get();

                selectResults[this.value] = values;
                console.log(selectResults);

                $('#crea_qcmqcmbundle_qcm_type_questions_'+this.value+'_response').val(selectResults[this.value].toString());
            });

            console.log(selectResults);
        }

    </script>

{% endblock %}